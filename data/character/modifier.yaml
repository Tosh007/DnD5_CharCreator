- Wood_Elf_Speed:
    text: "Wood Elf"
    lambda: "35"
- Halfling_speed:
    text: "Halfling"
    lambda: "25"
- Orc_minus2:
    text: "Orc: {0}"
    lambda: "x-2"
- Kobold_minus2:
    text: "Kobold: -2"
    lambda: "x-2"

- Dwarf_speed:
    lambda: "25"
    text: "Dwarf"
- Aarakocra_speed:
    lambda: "25"
    text: "Aarakocra"

- Barbarian_HP:
    lambda: "x+12"
    text: "Barbarian: {2:+d}"
- Bard_HP:
    lambda: "x+8"
    text: "Bard: {2:+d}"
- Cleric_HP:
    lambda: "x+8"
    text: "Cleric: {2:+d}"
- Druid_HP:
    lambda: "x+8"
    text: "Druid: {2:+d}"
- Fighter_HP:
    lambda: "x+10"
    text: "Fighter: {2:+d}"
- Monk_HP:
    lambda: "x+8"
    text: "Monk: {2:+d}"
- Paladin_HP:
    lambda: "x+10"
    text: "Paladin: +10"
- Ranger_HP:
    lambda: "x+10"
    text: "Ranger: +10"
- Rogue_HP:
    lambda: "x+8"
    text: "Rogue: +8"
- Sorcerer_HP:
    lambda: "x+6"
    text: "Sorcerer: +6"
- Warlock_HP:
    lambda: "x+8"
    text: "Warlock: +8"
- Wizard_HP:
    lambda: "x+6"
    text: "Wizard: {2:+d}"
- initiative:
    lambda: 'getValue("dextMod").get()'
    text: ""
    order: -1

- perception_wisdom:
    text: "wis mod + 10"
    lambda: 'x+getValue("wisdomMod").get()+10'
    order: -1
- perception_proficient:
    text: "+ prof bonus"
    lambda: 'x+(getValue("proficiencyBonus").get() if getValue("prof_perception").get() else 0)'
- plus1:
    text: "+1"
    lambda: "x+1"
- plus2:
    text: "+2"
    lambda: "x+2"
- plus3:
    text: "+3"
    lambda: "x+3"
# for feats
- Alert:
    text: "Alert"
    lambda: "x+5"
- Athlete:
    text: "Athlete"
    lambda: "x+1"
- Actor:
    text: "Actor"
    lambda: "x+1"
- mobile:
    text: "mobile: +10"
    lambda: "x+10"
    order: 5
- Tough:
    text: "Tough: +2*level ({2})"
    lambda: "x+2*getValue('level').get()"
- Observant_plus5:
    text: "Observant: +5"
    lambda: "x+5"

- AbilityScoreHardCap:
    lambda: "min(20,x)"
    text: "Hardcap at 20"
    order: 8
